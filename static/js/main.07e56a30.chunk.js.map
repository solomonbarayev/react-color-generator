{"version":3,"sources":["utils.js","SingleColor.js","App.js","index.js"],"names":["componentToHex","c","hex","toString","length","rgbToHex","r","g","b","SingleColor","rgb","weight","index","useState","alert","setAlert","bcg","join","useEffect","alertTimer","setTimeout","clearTimeout","lightColor","color","className","style","backgroundColor","onClick","navigator","clipboard","writeText","App","setColor","error","setError","Values","all","list","setList","onSubmit","e","preventDefault","colors","console","log","type","value","placeholder","onChange","target","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAAA,SAASA,EAAeC,GACtB,IAAIC,EAAMD,EAAEE,SAAS,IACrB,OAAqB,GAAdD,EAAIE,OAAc,IAAMF,EAAMA,EAOxBG,MAJf,SAAkBC,EAAGC,EAAGC,GACtB,MAAO,IAAMR,EAAeM,GAAKN,EAAeO,GAAKP,EAAeQ,ICqCvDC,EAxCK,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,IAAKC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAAY,EACpBC,oBAAS,GADW,mBACvCC,EADuC,KAChCC,EADgC,KAExCC,EAAMN,EAAIO,KAAK,KACff,EAAMG,EAAQ,WAAR,cAAYK,IAExBQ,qBAAU,WACR,IAAIC,EAAaC,YAAW,WAC1BL,GAAS,KACR,KAEH,OAAO,WACLM,aAAaF,MAEd,CAACL,IAEJ,IAAMQ,EAAa,CACjBC,MAAO,QAET,OACE,6BACEC,UAAS,QACTC,MAAO,CACLC,gBAAgB,OAAD,OAASV,EAAT,MAEjBW,QAAS,WACPZ,GAAS,GACTa,UAAUC,UAAUC,UAAU5B,KAGhC,uBAAGsB,UAAU,gBAAgBC,MAAOb,EAAQ,GAAKU,EAAa,MAC3DX,EADH,KAGA,uBAAGa,UAAU,cAAcC,MAAOb,EAAQ,GAAKU,EAAa,MACzDpB,GAEFY,GAAS,uBAAGU,UAAU,SAAb,yB,gBCWDO,MA5Cf,WAAgB,IAAD,EACalB,mBAAS,WADtB,mBACNU,EADM,KACCS,EADD,OAEanB,oBAAS,GAFtB,mBAENoB,EAFM,KAECC,EAFD,OAGWrB,mBAAS,IAAIsB,IAAO,WAAWC,IAAI,KAH9C,mBAGNC,EAHM,KAGAC,EAHA,KAkBb,OACE,oCACE,6BAASd,UAAU,aACjB,+CACA,0BAAMe,SAjBS,SAACC,GACpBA,EAAEC,iBACF,IACE,IAAIC,EAAS,IAAIP,IAAOZ,GAAOa,IAAI,IACnCO,QAAQC,IAAIF,GACZR,GAAS,GACTI,EAAQI,GACR,MAAOT,GACPC,GAAS,GACTS,QAAQV,MAAMA,MASV,2BACET,UAAS,UAAKS,GAAS,SACvBY,KAAK,OACLC,MAAOvB,EACPwB,YAAY,UACZC,SAAU,SAACR,GAAD,OAAOR,EAASQ,EAAES,OAAOH,UAErC,4BAAQtB,UAAU,MAAMqB,KAAK,UAA7B,YAKJ,6BAASrB,UAAU,UAChBa,EAAKa,KAAI,SAAC3B,EAAOX,GAChB,OAAO,kBAAC,EAAD,eAAauC,IAAKvC,GAAWW,EAA7B,CAAoCX,MAAOA,WCrC5DwC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.07e56a30.chunk.js","sourcesContent":["function componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length == 1 ? '0' + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nexport default rgbToHex;\n","import React, { useState, useEffect } from \"react\";\nimport rgbToHex from \"./utils\";\n\nconst SingleColor = ({ rgb, weight, index }) => {\n  const [alert, setAlert] = useState(false);\n  const bcg = rgb.join(\",\");\n  const hex = rgbToHex(...rgb);\n\n  useEffect(() => {\n    let alertTimer = setTimeout(() => {\n      setAlert(false);\n    }, 2000);\n\n    return () => {\n      clearTimeout(alertTimer);\n    };\n  }, [alert]);\n\n  const lightColor = {\n    color: \"#fff\",\n  };\n  return (\n    <article\n      className={`color`}\n      style={{\n        backgroundColor: `rgb(${bcg})`,\n      }}\n      onClick={() => {\n        setAlert(true);\n        navigator.clipboard.writeText(hex);\n      }}\n    >\n      <p className=\"percent-value\" style={index > 10 ? lightColor : null}>\n        {weight}%\n      </p>\n      <p className=\"color-value\" style={index > 10 ? lightColor : null}>\n        {hex}\n      </p>\n      {alert && <p className=\"alert\">copied to clipboard</p>}\n    </article>\n  );\n};\n\nexport default SingleColor;\n","import React, { useState } from \"react\";\nimport SingleColor from \"./SingleColor\";\n\nimport Values from \"values.js\";\n\nfunction App() {\n  const [color, setColor] = useState(\"#f15025\");\n  const [error, setError] = useState(false);\n  const [list, setList] = useState(new Values(\"#f15025\").all(10));\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    try {\n      let colors = new Values(color).all(10);\n      console.log(colors);\n      setError(false);\n      setList(colors);\n    } catch (error) {\n      setError(true);\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <section className=\"container\">\n        <h3>Color Generator</h3>\n        <form onSubmit={handleSubmit}>\n          <input\n            className={`${error && \"error\"}`}\n            type=\"text\"\n            value={color}\n            placeholder=\"#f15025\"\n            onChange={(e) => setColor(e.target.value)}\n          />\n          <button className=\"btn\" type=\"submit\">\n            Submit\n          </button>\n        </form>\n      </section>\n      <section className=\"colors\">\n        {list.map((color, index) => {\n          return <SingleColor key={index} {...color} index={index} />;\n        })}\n      </section>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}